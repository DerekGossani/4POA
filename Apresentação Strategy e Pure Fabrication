# ğŸ§© PadrÃµes de Projeto em Java â€” Strategy e Pure Fabrication

Este projeto demonstra de forma simples e didÃ¡tica dois **padrÃµes de projeto** muito usados na programaÃ§Ã£o orientada a objetos:  
ğŸ‘‰ **Strategy**  
ğŸ‘‰ **Pure Fabrication**

O cÃ³digo foi feito em **Java**, ideal para fins educacionais e apresentaÃ§Ãµes de faculdade.

---

## ğŸ“š 1. PadrÃ£o Strategy

O padrÃ£o **Strategy** tem como objetivo **definir uma famÃ­lia de algoritmos**, encapsulÃ¡-los e tornÃ¡-los **intercambiÃ¡veis**.  
Isso permite alterar o comportamento de um objeto **em tempo de execuÃ§Ã£o**, sem precisar modificar seu cÃ³digo-fonte.

### ğŸ’¡ Exemplo neste projeto

Usamos o `Strategy` para aplicar diferentes **tipos de desconto** em um produto:
- `DescontoNatal` â†’ 10% de desconto  
- `DescontoAniversario` â†’ 20% de desconto  

A classe `CalculadoraDeDesconto` utiliza uma interface `DescontoStrategy` e pode trocar a estratÃ©gia de cÃ¡lculo conforme a necessidade:

```java
calculadora.setEstrategia(new DescontoNatal());
double valorComDesconto = calculadora.aplicarDesconto(200.0);
